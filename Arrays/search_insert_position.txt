Problem Name: Search Insert Position

LeetCode Problem Link: https://leetcode.com/problems/search-insert-position/

Problem Statement (Short):
Given a sorted array of distinct integers nums and a target value, return the index if the target is found.  
If not, return the index where it would be if it were inserted in order.

Example:
Input: nums = [1,3,5,6], target = 5  
Output: 2

Approach (Binary Search):
- Use binary search to efficiently find the target or its insert position.
- If the target is found, return its index.
- If not found, return the position where it should be inserted.

Steps:
1. Initialize `start = 0` and `end = len(nums) - 1`.
2. While `start <= end`:
   - Calculate `mid = (start + end) // 2`.
   - If `nums[mid] == target`, return `mid`.
   - If `target > nums[mid]`, set `start = mid + 1`.
   - If `target < nums[mid]`, set `end = mid - 1`.
3. If not found, return `start` as the insert position.

Time Complexity:
- O(log n), where n is the number of elements in the array.

Space Complexity:
- O(1).

Edge Cases:
- Target is smaller than all elements.
- Target is larger than all elements.
- Target is not present in the array.
- Array is empty.